type Character {
  id: ID!
  user_id: ID!
  name: String!
  title: String
  char_class: String
  stat_str: Int
  stat_int: Int
  stat_dex: Int
  image_big: String
  image_portrait: String
  armor_type: String
  main_weapon: String
  abilities: [Ability]
}

type GetCharacterSuccess {
  character: Character!
}

type GetCharacterError {
  characterNotFoundError: String
  wrongUserError: String
  noUserError: String
  generalError: String
}

union GetCharacterResult = GetCharacterSuccess | GetCharacterError

type Query {
  character(charId: Int!): GetCharacterResult
  characters: [Character]
}

type MutationCharacterSuccess {
  character: Character!
}
type CreateCharacterError {
  message: String!
}
union CreateCharacterResult = 
  MutationCharacterSuccess
  | CreateCharacterError

type Mutation {
  createCharacter(
    name: String!
    title: String
    char_class: String
    stat_str: Int
    stat_int: Int
    stat_dex: Int
    image_big: String
    image_portrait: String
    armor_type: String
    main_weapon: String
  ): CreateCharacterResult

  updateCharacter(
    charId: Int!
    name: String
    title: String
    char_class: String
    stat_str: Int
    stat_int: Int
    stat_dex: Int
    image_big: String
    image_portrait: String
    armor_type: String
    main_weapon: String
  ): Character

  deleteCharacter(charId: Int!): Character
}
