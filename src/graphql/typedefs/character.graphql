type Character {
  id: ID!
  user_id: ID!
  name: String!
  title: String
  char_class: String
  stat_str: Int
  stat_int: Int
  stat_dex: Int
  image_big: String
  image_portrait: String
  armor_type: String
  main_weapon: String
  abilities: [Ability]
}

# ---------- Query ----------
# Success Types
type GetCharacterSuccess {
  character: Character!
}

# Error Types
type CharacterNotFoundError {
  message: String!
}
type DefaultError {
  message: String!
}

# Get Character
union GetCharacterResult =
    GetCharacterSuccess
  | CharacterNotFoundError
  | DefaultError

type Query {
  character(charId: Int!): GetCharacterResult
  characters: [Character]
}

# ---------- Mutation ----------
# Success Types
type MutationCharacterSuccess {
  character: Character!
}

# Error Types
type CharacterNotFoundError {
  message: String!
}
type StatNegativeError {
  message: String!
}
type ShortNameError {
  message: String!
}

# Create Character
union CreateCharacterResult =
    MutationCharacterSuccess
  | StatNegativeError
  | ShortNameError
  | DefaultError

# Update Character
union UpdateCharacterResult =
    MutationCharacterSuccess
  | CharacterNotFoundError
  | StatNegativeError
  | ShortNameError
  | DefaultError

# Delete Character
union DeleteCharacterResult =
    MutationCharacterSuccess
  | CharacterNotFoundError
  | DefaultError

type Mutation {
  createCharacter(
    name: String!
    title: String
    char_class: String
    stat_str: Int
    stat_int: Int
    stat_dex: Int
    image_big: String
    image_portrait: String
    armor_type: String
    main_weapon: String
  ): CreateCharacterResult

  updateCharacter(
    charId: Int!
    name: String
    title: String
    char_class: String
    stat_str: Int
    stat_int: Int
    stat_dex: Int
    image_big: String
    image_portrait: String
    armor_type: String
    main_weapon: String
  ): UpdateCharacterResult

  deleteCharacter(charId: Int!): Character
}
